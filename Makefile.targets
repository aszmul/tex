SHELL=bash

# the build system directory is the one containing this Makefile
BUILDSYSTEMDIR:=$(dir $(CURDIR)/$(word $(words $(MAKEFILE_LIST)),$(MAKEFILE_LIST)))

# the common dir is assumed to be in the projects directory, if not set already
COMMONDIR?=$(BUILDSYSTEMDIR)/../common

# set a default pdf viewer, if non was set already
PDFVIEWER?=evince

# sketch -- converts 3d scenes to tikz images
SKETCH_BIN=sketch

# the target pdf file to create
PDFFILE=$(TEXFILE:.tex=.pdf)

# temporary directory for tex-compilation
TEMPDIR=.tmp

# externalization directory (for journal publication)
EXPDIR=.export

# which latex binary to use
LATEX?=pdflatex

# wildcards for files that are not supposed to be exported
NOPSEXPORT=./Makefile* *.swp *.bib *.blg *.dep *.aux *.log *.dvi *.pdf *.ps *.txt *.png *.tikz.tex *.sk *.dat *.inc ./export/* ./pgf/* ./pgfplots/* ./README* ./build ./$(TEMPDIR) $(EXPORT_EXCLUDE) ./$(TEXFILE:.tex=.pdf)
NOPDFEXPORT=./Makefile* *.swp *.bib *.blg *.dep *.aux *.log *.dvi *.eps *.ps *.txt *.tikz.tex *.sk *.dat *.inc ./export/* ./pgf/* ./pgfplots/* ./README* ./build ./$(TEMPDIR) $(EXPORT_EXCLUDE) ./$(TEXFILE:.tex=.pdf)

# tex-generated list of tikz images in the target pdf
TIKZDEPFILE=tikz.dep

# additionaly search these dirs for prerequisites
VPATH=$(COMMONDIR):$(EXPDIR):$(TEMPDIR)

# tex include paths
TEXINPUTS=$(BUILDSYSTEMDIR)/include//

prepare-tmpdir=\
  mkdir -p $(TEMPDIR); \
  rsync --safe-links -ru $(BUILDSYSTEMDIR)/* $(TEMPDIR); \
  rsync --safe-links -ru $(COMMONDIR)/* $(TEMPDIR); \
  rsync --safe-links -ru * $(TEMPDIR)

prepare-psexpdir=\
  mkdir -p $(EXPDIR); \
  rsync --safe-links -ru $(BUILDSYSTEMDIR)/* $(EXPDIR); \
  rsync --safe-links -ru $(COMMONDIR)/* $(EXPDIR); \
  rsync --safe-links -ru * $(EXPDIR)

prepare-pdfexpdir=\
  mkdir -p $(EXPDIR); \
  rsync -ru $(TEMPDIR)/* $(EXPDIR); \
  mv $(EXPDIR)/include/* $(EXPDIR); \
  rsync --safe-links -ru * $(EXPDIR)

default: view

.PHONY:
images:
-include $(TEMPDIR)/$(TIKZDEPFILE)

compile: images $(TEXFILE)
	$(call prepare-tmpdir)
	( \
	  cd $(TEMPDIR) && \
	  TEXINPUTS=.:..:$(BUILDSYSTEMDIR):$(COMMONDIR):$(TEXINPUTS): \
	  TTFONTS=$(BUILDSYSTEMDIR)/fonts/: \
	  OPENTYPEFONTS=$(BUILDSYSTEMDIR)/fonts/: \
	  $(LATEX) \
	    -halt-on-error \
	    --jobname everything \
	    --shell-escape \
	     -synctex=-1 \
	    '\def\enabletikztension{} \input{$(TEXFILE:.tex=)}' && \
	  mv everything.pdf success.pdf && \
	  (bibtex everything.aux || true) && \
	  mv temp$(TIKZDEPFILE) $(TIKZDEPFILE) && \
	  echo -n "images: " >> $(TIKZDEPFILE) && \
	  for pdffile in `cat $(TIKZDEPFILE) | grep '.*\.pdf:' | sed 's/\(.*\.pdf\).*/\1/'`; \
	    do echo -n " $$pdffile" >> $(TIKZDEPFILE); \
	  done && \
	  echo "" >> $(TIKZDEPFILE); \
	  echo -n "epsimages: " >> $(TIKZDEPFILE) && \
	  for epsfile in `cat $(TIKZDEPFILE) | grep '.*\.pdf:' | sed 's/\(.*\)\.pdf.*/\1.eps/'`; \
	    do echo -n " $$epsfile" >> $(TIKZDEPFILE); \
	  done && \
	  echo "" >> $(TIKZDEPFILE) \
	) && \
	( \
	  mv $(TEMPDIR)/success.pdf $(TEXFILE:.tex=.pdf); \
	  cat $(TEMPDIR)/everything.synctex | sed 's/$(TEMPDIR)/./g' > $(TEXFILE:.tex=.synctex); \
	  mv $(TEMPDIR)/everything.log $(TEXFILE:.tex=.log); \
	) \
	|| \
	rm $(TEMPDIR)/$(TIKZDEPFILE)

view: compile
	@ if pgrep -l -f "$(PDFVIEWER) $(PDFFILE)" | grep $(PDFVIEWER) >/dev/null; \
	then echo "$(PDFVIEWER) already running"; \
	else echo "$(PDFVIEWER) not running"; \
	  /bin/sh -c "$(PDFVIEWER) $(PDFFILE) &" 1&>/dev/null 2&>/dev/null;\
	fi

# create a version that includes all figures as eps files and does not need tikz anymore
psexport: compile epsimages
	# create externalization directory
	# and copy all tex files in there
	$(call prepare-psexpdir)
	# overwrite tikz-includes
	cp $(BUILDSYSTEMDIR)/export/* $(EXPDIR)/include/
	# copy bibtex file there
	cp $(TEMPDIR)/everything.bbl $(EXPDIR)/$(subst .tex,.bbl,$(TEXFILE))
	# remove all files that are not supposed to be exported
	( \
	  cd $(EXPDIR) && \
	  find \( -type l -o -type f -a \( $(foreach PATTERN, $(NOPSEXPORT), -wholename '$(PATTERN)' -o) -false \) \) -exec rm '{}' \; ; \
	  find -depth -empty -type d -exec rm -r '{}' \; \
	)

# create a version that includes all figures as pdf files and does not need tikz anymore
pdfexport: compile
	# create externalization directory
	# and copy all tex files in there
	$(call prepare-pdfexpdir)
	# overwrite tikz-includes
	cp -r $(BUILDSYSTEMDIR)/export/* $(EXPDIR)
	# rename bibtex file
	mv $(EXPDIR)/everything.bbl $(EXPDIR)/$(subst .tex,.bbl,$(TEXFILE)) || true
	# rename theorem file
	mv $(EXPDIR)/everything.thm $(EXPDIR)/$(subst .tex,.thm,$(TEXFILE)) || true
	# remove all files that are not supposed to be exported
	( \
	  cd $(EXPDIR) && \
	  find \( $(foreach PATTERN, $(NOPDFEXPORT), -wholename '$(PATTERN)' -o) -false \) -exec rm -r '{}' \; ; \
	  find -depth -empty -type d -exec rm -r '{}' \; \
	)

# rule to create pdf files from tikz images of the target pdf
%.pdf:
	$(call prepare-tmpdir)
	-( \
	  cd $(TEMPDIR) && \
	  TEXINPUTS=.:..:$(BUILDSYSTEMDIR):$(COMMONDIR):$(TEXINPUTS): \
	  TTFONTS=$(BUILDSYSTEMDIR)/fonts/: \
	  OPENTYPEFONTS=$(BUILDSYSTEMDIR)/fonts/: \
	  $(LATEX) \
	    -halt-on-error \
	    --jobname $(subst .pdf,,$@) \
	    --shell-escape \
	    '\def\enabletikztension{} \input{$(TEXFILE:.tex=)}' \
	)

# rule to create tikz from sketch
%.tikz.tex:%.sk
	$(call prepare-tmpdir)
	( \
	  cd $(TEMPDIR) && \
	  $(SKETCH_BIN) -b -o $@ $(subst .tikz.tex,.sk,$@) \
	)

# rule to create ps files from pdf images
%.eps:%.pdf
	$(call prepare-psexpdir)
	pdf2ps $< $(subst .eps,.ps,$(EXPDIR)/$@)
	ps2eps -f $(subst .eps,.ps,$(EXPDIR)/$@)

clean:
	rm -rf $(TEMPDIR)
	rm -rf $(EXPDIR)
	rm -f $(PDFFILE)
	rm -f $(PDFFILE:.pdf=.log)
	rm -f $(PDFFILE:.pdf=.synctex)
